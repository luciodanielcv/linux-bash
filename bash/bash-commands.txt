

#Check folder space
du -h

#Check disk space
df -h

#look for a string in a file
grep "text" file.txt

#look for a string ignore case-sensitive in a file
grep -i "text" file.txt

#Create folder and subfolders as necessary
mkdir -p existingFolder/requiredFolder1/requiredFolder2/folde

#As an example, when you change your password with the passwd command, your new password is stored in the file /etc/shadow.

#There is some special permissions for files-programs
#Permissions called SUID and SGID - Special UniserId and Special GroupId
#These permissions are indicated with an s replacing the w in the "rxw" octet
#These permissions will make the file-program to inherit permissions replacing the current user executing the file-program
#An example is the /etc/passwd file which is root-only access but for a user that required to update its password a permission is required in this /etc/passwd file.

#To check ip address
ip addr

#To check file sizes
du -h

#Adding qemu and kvm as virtualizer

sudo apt-get install qemu-kvm libvirt-daemon-system libvirt-clients bridge-utils virt-manager
sudo apt-get install qemu virt-manager ebtables
sudo systemctl enable libvirtd
sudo systemctl start libvirtd
sudo systemctl status libvirtd
sudo usermod -G libvirt -a ldcv

sudo apt-get install qemu-kvm libvirt-daemon-system libvirt-clients bridge-utils virt-manager
clear
sudo usermod -aG libvirt ldcv
sudo usermod -aG kvm ldcv


#convert virtual box image to qemu
sudo qemu-img convert -f vdi -O qcow2 VirtualMachines/ldcv_mint/ldcv_mint.vdi qemuVirtualMachines/ldcv_mint.qcow2


#Add user to docker group
sudo usermod -aG docker ldcv

#To enable shrew with QT5 with these commands:
git clone https://github.com/ben-foxmoore/shrew-qt5.git
cmake -DCMAKE_INSTALL_PREFIX=/usr -DQTGUI=YES -DETCDIR=/etc -DNATT=YES
make
sudo make install
#The command is qikea

#In linux aws I had the error regarding shared libraries not found. Then I had to
#execute this to fix the problem:
sudo ldconfig


#Login with command line
ikec -r Bimbo -u gabriel.custodio@dxc.com -p password -a

-------------------

#Save git credentials
git config --global credential.helper store

--------------

git branch --set-upstream-to=origin/dev local-dev

--------------
<repositories>
	<repository>
	   <id>jaspersoft-third-party</id>
	   <url>https://jaspersoft.jfrog.io/jaspersoft/third-party-ce-artifacts/</url>
	</repository>
</repositories>

-------------------
#Activate node in AWS virtual machine
#First install nvm
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash
#Activate nvm
. ~/.nvm/nvm.sh
#Install node
nvm install node


-----------------------

#Install maven 3.8+ in AWS virtual machine
sudo yum remove maven
  464  sudo wget https://www-eu.apache.org/dist/maven/maven-3/3.8.1/binaries/apache-maven-3.8.1-bin.tar.gz
  465  sudo tar xf /tmp/apache-maven-*.tar.gz -C /opt
  466  sudo tar xf apache-maven-*.tar.gz -C /opt
  467  ll
  468  sudo ln -s /opt/apache-maven-3.8.1 /opt/maven
  469  sudo nano /etc/profile.d/maven.sh
  470  sudo vim /etc/profile.d/maven.sh
  471  sudo chmod +x /etc/profile.d/maven.sh
  472  source /etc/profile.d/maven.sh
  473  mvn --version

#File /etc/profile.d/maven.sh
export JAVA_HOME=/usr/java/jdk1.8.0_261-amd64
export M2_HOME=/opt/maven
export MAVEN_HOME=/opt/maven
export PATH=${M2_HOME}/bin:${PATH}


-------------------

#Payroll frontend build
mkdir node
cd node
ln -s /home/ec2-user/.nvm/versions/node/v16.3.0/bin/node node
ln -s /home/ec2-user/.nvm/versions/node/v16.3.0/lib/node_modules node_modules

-------------------------
mkdir node
 2038  cd node
 2039  whereis node
 2040  ln -s /home/ldcv/Documents/ldcvApps/node-v14.17.0-linux-x64/bin/node node
 2041  ln -s /home/ldcv/Documents/ldcvApps/node-v14.17.0-linux-x64/lib/node_modules/ node_modules

-----------------------





